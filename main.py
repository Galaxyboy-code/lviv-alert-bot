import requests
import time
import json
from datetime import datetime, timedelta

# VIBER Channels Post API ‚Äî –≤–∞—à —Ç–æ–∫–µ–Ω
VIBER_AUTH_TOKEN = "4ff0433b38f5fcc9-a364357ba6cfecf4-beef8c736d55f9f9"
VIBER_POST_URL = "https://chatapi.viber.com/pa/post"

# –ù–û–í–ò–ô –ü–£–ë–õ–Ü–ß–ù–ò–ô API –¢–†–ò–í–û–ì (–±–µ–∑ –∫–ª—é—á–∞, siren.pp.ua)
ALERTS_API = "https://siren.pp.ua/api/v1/regions"  # –ü—É–±–ª—ñ—á–Ω–∏–π wrapper –¥–ª—è Ukraine Alarm

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–¢–û–õ–¨–ö–ò –¶–Ü –ô–î–£–¢–¨ –í –ö–ê–ù–ê–õ)
ALERT_MSG = "üî¥ –õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å - –ø–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞!"
CLEAR_MSG = "üü¢ –õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å - –≤—ñ–¥–±—ñ–π –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ—ó —Ç—Ä–∏–≤–æ–≥–∏!"
FOLLOWUP_MSG = """–©–æ –∫—É–¥–∏ –ª–µ—Ç–∏—Ç—å?
–Ø–∫—ñ –Ω–æ–≤–∏–Ω–∏?
–ö–æ–ª–∏ —Ç—Ä–∏–≤–æ–≥–∞?
–ù–∞ –∫–∞–Ω–∞–ª—ñ –õ—å–≤—ñ–≤
https://invite.viber.com/?g2=AQBzQCL4EeunAk83%2F%2FOF12KWoE%2F7khfwWS%2Brwxzb9s11zTRF6o51lV1zQhg6Gh7S"""

WEEKLY_DONATE_MSG = """–ù–∞—à –∫–∞–Ω–∞–ª –ø—Ä–∞—Ü—é—î 24/7
–Ü —Ü–µ –∑–∞–≤–¥—è–∫–∏ –≤–∞—à–∏–º –¥–æ–Ω–∞—Ç–∞–º üí∏
–ù–∞—à –∫–∞–Ω–∞–ª —Ü—ñ–ª–æ–¥–æ–±–æ–≤–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç—å –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É üî•
–ü–æ –≤—Å—ñ—Ö —Ç—Ä–∏–≤–æ–≥–∞—Ö.
–î—É–∂–µ –≤–∞–∂–∫–æ, —ñ –¥–æ–≤–≥–æ, –º–æ–Ω—ñ—Ç–æ—Ä–∏–º–æ —Ä–∞–Ω–æ, –≤–¥–µ–Ω—å, —ñ –≤–Ω–æ—á—ñ.
üó∫Ô∏è–î—è–∫—É—î–º–æ —â–æ –∑–∞–≤–∂–¥–∏ —Ç—É—Ç.
‚û°Ô∏è–ë—É–¥–µ–º–æ –≤–¥—è—á–Ω—ñ –∑–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –∫–∞–Ω–∞–ª—É, —è–∫–∏–π –ø—Ä–∞—Ü—é—î –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ 24/7
–ö–∞—Ä—Ç–∞:
4441 1144 3273 6617
Monobank:
https://send.monobank.ua/jar/ABtvYdkmVS
–ù–∞ –∑–≤'—è–∑–∫—É ü´°"""

class LvivAlertBot:
    def __init__(self):
        self.token = VIBER_AUTH_TOKEN
        self.post_url = VIBER_POST_URL
        self.current_status = None
        self.followup_sent = False
        self.last_donate_time = datetime.now() - timedelta(days=7)
        
        print("=" * 50)
        print(f"üöÄ VIBER BOT –î–õ–Ø –õ–¨–í–û–í–ê –ó–ê–ü–£–©–ï–ù–û (–ù–û–í–ò–ô API siren.pp.ua)!")
        print(f"üìÖ –ß–∞—Å: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        print(f"üîë Auth Token: {self.token[:20]}...")
        print(f"üì° API —Ç—Ä–∏–≤–æ–≥: {ALERTS_API}")
        print("=" * 50)
        
        # –¢–ï–°–¢ VIBER API
        self.test_viber_api()
    
    def test_viber_api(self):
        """–¢–µ—Å—Ç –∑ –ø–æ–≤–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º"""
        print("\nüß™ –¢–ï–°–¢ VIBER API...")
        
        test_payload = {
            'auth_token': self.token,
            'from': self.token,
            'type': 'text',
            'text': 'üß™ Railway: –ë–æ—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ! –ù–æ–≤–∏–π API —Ç—Ä–∏–≤–æ–≥.'
        }
        
        print(f"üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç: {json.dumps(test_payload, indent=2)}")
        
        try:
            response = requests.post(self.post_url, json=test_payload, timeout=15)
            print(f"üì• –í—ñ–¥–ø–æ–≤—ñ–¥—å Viber:")
            print(f"   Status Code: {response.status_code}")
            print(f"   Response: {response.text[:200]}")
            
            if response.status_code == 200:
                print("‚úÖ ‚úÖ ‚úÖ VIBER API –ü–†–ê–¶–Æ–Ñ! –¢–µ—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª")
            else:
                print(f"‚ùå ‚ùå ‚ùå VIBER API –ü–û–ú–ò–õ–ö–ê {response.status_code}")
                if response.status_code == 2:
                    print("   –ü–†–ò–ß–ò–ù–ê: –ù–µ–≤—ñ—Ä–Ω–∏–π auth_token")
                elif response.status_code == 12:
                    print("   –ü–†–ò–ß–ò–ù–ê: Rate limit")
                
        except Exception as e:
            print(f"‚ùå ‚ùå ‚ùå –ü–û–ú–ò–õ–ö–ê –¢–ï–°–¢–£: {type(e).__name__}: {str(e)}")
        
        print("\n" + "=" * 50)
    
    def send_viber_post(self, message):
        """–ù–∞–¥—Å–∏–ª–∞—î –ø–æ—Å—Ç –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º"""
        print(f"\nüì§ –ù–ê–î–°–ò–õ–ê–Ñ–ú–û: '{message[:50]}...'")
        
        payload = {
            'auth_token': self.token,
            'from': self.token,
            'type': 'text',
            'text': message
        }
        
        try:
            response = requests.post(self.post_url, json=payload, timeout=15)
            print(f"üì• Status: {response.status_code}")
            print(f"üì• Response: {response.text[:100]}")
            
            if response.status_code == 200:
                print("‚úÖ ‚úÖ ‚úÖ –ü–û–°–¢ –ù–ê–î–Ü–°–õ–ê–ù–û!")
                return True
            else:
                print(f"‚ùå ‚ùå ‚ùå –ü–û–ú–ò–õ–ö–ê {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå ‚ùå ‚ùå –ü–û–ú–ò–õ–ö–ê –ù–ê–î–°–ò–õ–ê–ù–ù–Ø: {type(e).__name__}: {str(e)}")
            return False
    
    def get_lviv_status(self):
        """–°—Ç–∞—Ç—É—Å –õ—å–≤–æ–≤–∞ –∑ –ù–û–í–ò–ú API siren.pp.ua"""
        print("\nüîç –û–¢–†–ò–ú–£–Ñ–ú–û –°–¢–ê–¢–£–° –õ–¨–í–û–í–ê (siren.pp.ua)...")
        
        try:
            print(f"üì° –ó–∞–ø–∏—Ç –¥–æ {ALERTS_API}")
            response = requests.get(ALERTS_API, timeout=15)
            print(f"üì• Status: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print(f"üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {json.dumps(data, indent=2)[:200]}...")  # –ü–µ—Ä—à—ñ 200 —Å–∏–º–≤–æ–ª—ñ–≤
                
                # –§–æ—Ä–º–∞—Ç siren.pp.ua: {"data": {"regions": [{"name": "–õ—å–≤—ñ–≤—Å—å–∫–∞", "status": "active/inactive"}]}}
                if 'data' in data and 'regions' in data['data']:
                    regions = data['data']['regions']
                    print(f"üìä –ó–Ω–∞–π–¥–µ–Ω–æ —Ä–µ–≥—ñ–æ–Ω—ñ–≤: {len(regions)}")
                    
                    for i, region in enumerate(regions):
                        region_name = region.get('name', '')
                        status = region.get('status', 'unknown')
                        print(f"   –†–µ–≥—ñ–æ–Ω {i+1}: '{region_name}' ‚Äî —Å—Ç–∞—Ç—É—Å: {status}")
                        
                        if '–ª—å–≤—ñ–≤' in region_name.lower() or 'lviv' in region_name.lower():
                            print(f"üéØ –ó–ù–ê–ô–î–ï–ù–û –õ–¨–í–Ü–í: '{region_name}' ‚Äî —Å—Ç–∞—Ç—É—Å: {status}")
                            return status
                
                print("‚ö†Ô∏è ‚ö†Ô∏è –õ–¨–í–Ü–í –ù–ï –ó–ù–ê–ô–î–ï–ù–û –í –°–ü–ò–°–ö–Ü –†–ï–ì–Ü–û–ù–Ü–í")
                return None
            else:
                print(f"‚ùå ‚ùå –ù–û–í–ò–ô API –ü–û–ú–ò–õ–ö–ê {response.status_code}")
                return None
                
        except Exception as e:
            print(f"‚ùå ‚ùå –ü–û–ú–ò–õ–ö–ê –ù–û–í–û–ì–û API: {type(e).__name__}: {str(e)}")
            return None
    
    def check_donate_post(self):
        """–©–æ—Ç–∏–∂–Ω–µ–≤–µ –¥–æ–Ω–∞—Ç-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        now = datetime.now()
        days_since_donate = (now - self.last_donate_time).days
        
        if days_since_donate >= 7:
            print(f"\nüí∞ –ß–ê–° –î–õ–Ø –î–û–ù–ê–¢-–ü–û–°–¢–£ (–º–∏–Ω—É–ª–æ {days_since_donate} –¥–Ω—ñ–≤)")
            if self.send_viber_post(WEEKLY_DONATE_MSG):
                self.last_donate_time = now
                print("‚úÖ ‚úÖ ‚úÖ –î–û–ù–ê–¢-–ü–û–°–¢ –ù–ê–î–Ü–°–õ–ê–ù–û!")
            else:
                print("‚ùå ‚ùå ‚ùå –ü–û–ú–ò–õ–ö–ê –î–û–ù–ê–¢-–ü–û–°–¢–£")
    
    def run_monitoring(self):
        """–ì–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º"""
        print(f"\nüöÄ üöÄ üöÄ –ü–û–ß–ê–¢–û–ö –ú–û–ù–Ü–¢–û–†–ò–ù–ì–£ –õ–¨–í–û–í–ê (–ù–û–í–ò–ô API)!")
        print(f"üìÖ –°—Ç–∞—Ä—Ç: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        print("üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥...\n")
        
        cycle_count = 0
        consecutive_errors = 0
        max_errors = 5
        
        while True:
            try:
                cycle_count += 1
                print(f"\nüîÑ –¶–ò–ö–õ #{cycle_count} ‚Äî {datetime.now().strftime('%H:%M:%S')}")
                
                # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–Ω–∞—Ç-–ø–æ—Å—Ç—É
                self.check_donate_post()
                
                # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –õ—å–≤–æ–≤–∞
                lviv_status = self.get_lviv_status()
                
                if lviv_status is not None:
                    # –°—Ç–∞—Ç—É—Å –æ—Ç—Ä–∏–º–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ
                    consecutive_errors = 0
                    status_emoji = "üö®" if lviv_status == 'active' else "üü¢"
                    current_time = datetime.now().strftime('%H:%M:%S')
                    
                    print(f"üìä –°–¢–ê–¢–£–° –õ–¨–í–û–í–ê: [{status_emoji}] {lviv_status} ({current_time})")
                    
                    # –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É
                    if lviv_status != self.current_status:
                        print(f"üîÑ üîÑ –ó–ú–Ü–ù–ê –°–¢–ê–¢–£–°–£: {self.current_status} ‚Üí {lviv_status}")
                        
                        if lviv_status == 'active':
                            # –¢–†–ò–í–û–ì–ê!
                            print("üö® üö® üö® –ü–û–ß–ê–¢–û–ö –ü–û–í–Ü–¢–†–Ø–ù–û–á –¢–†–ò–í–û–ì–ò!")
                            if self.send_viber_post(ALERT_MSG):
                                print("‚úÖ ‚úÖ ‚úÖ –¢–†–ò–í–û–ì–ê –ù–ê–î–Ü–°–õ–ê–ù–ê!")
                            self.current_status = 'active'
                            self.followup_sent = False
                            
                            # Follow-up —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
                            print("‚è≥ –ß–µ–∫–∞—î–º–æ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è follow-up...")
                            time.sleep(30)
                            
                            if self.current_status == 'active' and not self.followup_sent:
                                print("üì¢ üì¢ –ù–ê–î–°–ò–õ–ê–Ñ–ú–û FOLLOW-UP!")
                                if self.send_viber_post(FOLLOWUP_MSG):
                                    print("‚úÖ ‚úÖ ‚úÖ FOLLOW-UP –ù–ê–î–Ü–°–õ–ê–ù–û!")
                                self.followup_sent = True
                        
                        elif lviv_status == 'inactive' and self.current_status == 'active':
                            # –í–Ü–î–ë–Ü–ô!
                            print("‚úÖ ‚úÖ ‚úÖ –û–¢–†–ò–ú–ê–ù–û –í–Ü–î–ë–Ü–ô –¢–†–ò–í–û–ì–ò!")
                            if self.send_viber_post(CLEAR_MSG):
                                print("‚úÖ ‚úÖ ‚úÖ –í–Ü–î–ë–Ü–ô –ù–ê–î–Ü–°–õ–ê–ù–û!")
                            self.current_status = 'inactive'
                            self.followup_sent = False
                    else:
                        print(f"üìä –°—Ç–∞—Ç—É—Å –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è: {lviv_status}")
                
                else:
                    # –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É
                    consecutive_errors += 1
                    print(f"‚ö†Ô∏è ‚ö†Ô∏è –ü–û–ú–ò–õ–ö–ê –û–¢–†–ò–ú–ê–ù–ù–Ø –°–¢–ê–¢–£–°–£ #{consecutive_errors}")
                    
                    if consecutive_errors >= max_errors:
                        print("üí• üí• –ë–ê–ì–ê–¢–û –ü–û–ú–ò–õ–û–ö ‚Äî –ü–ê–£–ó–ê 5 –•–í–ò–õ–ò–ù")
                        time.sleep(300)
                        consecutive_errors = 0
                    else:
                        print("‚è≥ –ü–∞—É–∑–∞ 60 —Å–µ–∫—É–Ω–¥...")
                        time.sleep(60)
                
                # –ü–∞—É–∑–∞ –º—ñ–∂ —Ü–∏–∫–ª–∞–º–∏
                print(f"‚è≥ –¶–∏–∫–ª #{cycle_count} –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–∞—É–∑–∞ 30 —Å–µ–∫—É–Ω–¥...")
                time.sleep(30)
                
            except KeyboardInterrupt:
                print("\n‚èπÔ∏è ‚èπÔ∏è –ó–£–ü–ò–ù–ö–ê –ö–û–†–ò–°–¢–£–í–ê–ß–ï–ú (Ctrl+C)")
                break
            except Exception as e:
                print(f"\nüí• üí• –ù–ï–û–ß–Ü–ö–£–í–ê–ù–ê –ü–û–ú–ò–õ–ö–ê –í –¶–ò–ö–õ–Ü #{cycle_count}:")
                print(f"   –¢–∏–ø: {type(e).__name__}")
                print(f"   –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {str(e)}")
                print("üîÑ –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥...")
                time.sleep(60)
        
        print("\nüëã üëã –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î—è–∫—É—î–º–æ!")

# –ó–ê–ü–£–°–ö
if __name__ == "__main__":
    print("üéØ üéØ VIBER BOT –î–õ–Ø –õ–¨–í–û–í–ê ‚Äî –†–û–ë–û–ß–ò–ô –†–ï–ñ–ò–ú")
    print("=" * 60)
    
    try:
        bot = LvivAlertBot()
        bot.run_monitoring()
    except Exception as e:
        print(f"\nüí• üí• –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê –ü–†–ò –ó–ê–ü–£–°–ö–£: {type(e).__name__}: {str(e)}")
        print("üîß –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
